// TGOR (C) // CHECKED //
#pragma once

#include "CoreMinimal.h"

#include "CoreSystem/Storage/TGOR_SaveInterface.h"
#include "InventorySystem/Components/TGOR_InventoryComponent.h"
#include "TGOR_DropComponent.generated.h"

////////////////////////////////////////////// DECL //////////////////////////////////////////////////////


///////////////////////////////////////////// STRUCTS ///////////////////////////////////////////////////


/**
 * TGOR_DropComponent keeps track of one item for item drops
 */
UCLASS(ClassGroup = (Custom), Blueprintable, meta = (BlueprintSpawnableComponent))
class INVENTORYSYSTEM_API UTGOR_DropComponent : public UTGOR_InventoryComponent, public ITGOR_SaveInterface
{
	GENERATED_BODY()

public:

	////////////////////////////////////////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////// ENGINE ////////////////////////////////////////////
	////////////////////////////////////////////////////////////////////////////////////////////////////

	UTGOR_DropComponent();

	virtual UTGOR_ItemTask* PushItem(UTGOR_ItemTask* Task) override;
	virtual UTGOR_ItemTask* PullItem() override;

	//////////////////////////////////////////// IMPLEMENTABLES ////////////////////////////////////////


	////////////////////////////////////////////////////////////////////////////////////////////////////
public:

	/** Get currently held item */
	UFUNCTION(BlueprintPure, Category = "!TGOR Inventory", Meta = (Keywords = "C++"))
		UTGOR_ItemTask* GetCurrentItem() const;

	////////////////////////////////////////////////////////////////////////////////////////////////////
protected:

	/** Currently held item */
	UPROPERTY(BlueprintReadOnly, Category = "!TGOR Inventory")
		TWeakObjectPtr<UTGOR_ItemTask> CurrentItem;

	/////////////////////////////////////////////// INTERNAL ///////////////////////////////////////////

protected:

private:

};
